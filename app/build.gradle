plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
        resources.excludes.add("META-INF/*")
    }


    defaultConfig {
        applicationId "com.example.vocabularytrainer"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    //Pager
    implementation "com.google.accompanist:accompanist-pager:0.23.0"




    // If using indicators, also depend on
    implementation "com.google.accompanist:accompanist-pager-indicators:0.19.0"


    def navigationVersion = "2.4.0-beta02"
    implementation "androidx.navigation:navigation-compose:$navigationVersion"

    def hiltNavigationComposeVersion = "1.0.0-beta01"
    implementation "androidx.hilt:hilt-navigation-compose:$hiltNavigationComposeVersion"

    def activityComposeVersion = "1.4.0"
    implementation "androidx.activity:activity-compose:$activityComposeVersion"

    def lifecycleVersion = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleVersion"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.40"
    kapt "com.google.dagger:hilt-android-compiler:2.40"


    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"


    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.4.0"

    //For runBlockingTest, CoroutineDispatcher etc.
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"//For InstantTaskExecutorRule
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.4.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.1.0'

    testImplementation "com.google.truth:truth:1.1.3"

    implementation 'androidx.preference:preference:1.2.0'

    //JSON parser
    implementation 'com.beust:klaxon:5.5'

    //Coil
    implementation 'io.coil-kt:coil-compose:1.3.2'
    implementation "io.coil-kt:coil-svg:1.3.2"
}